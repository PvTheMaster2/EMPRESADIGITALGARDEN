
"smart_sources:build/node_modules/ws/README.md": {"path":"build/node_modules/ws/README.md","last_embed":{"hash":null},"embeddings":{},"last_read":{"hash":"651d857150af24f143e026ce87a5ea30190fb1fa4680494b62e0ed9f14d71438","at":1756858820455},"class_name":"SmartSource","outlinks":[{"title":"![Version npm","target":"https://img.shields.io/npm/v/ws.svg?logo=npm","line":7},{"title":"![CI","target":"https://img.shields.io/github/actions/workflow/status/websockets/ws/ci.yml?branch=master&label=CI&logo=github","line":8},{"title":"![Coverage Status","target":"https://img.shields.io/coveralls/websockets/ws/master.svg?logo=coveralls","line":9},{"title":"`WebSocket`","target":"https://developer.mozilla.org/en-US/docs/Web/API/WebSocket","line":20},{"title":"isomorphic-ws","target":"https://github.com/heineiuo/isomorphic-ws","line":23},{"title":"Protocol support","target":"#protocol-support","line":27},{"title":"Installing","target":"#installing","line":28},{"title":"Opt-in for performance","target":"#opt-in-for-performance","line":29},{"title":"Legacy opt-in for performance","target":"#legacy-opt-in-for-performance","line":30},{"title":"API docs","target":"#api-docs","line":31},{"title":"WebSocket compression","target":"#websocket-compression","line":32},{"title":"Usage examples","target":"#usage-examples","line":33},{"title":"Sending and receiving text data","target":"#sending-and-receiving-text-data","line":34},{"title":"Sending binary data","target":"#sending-binary-data","line":35},{"title":"Simple server","target":"#simple-server","line":36},{"title":"External HTTP/S server","target":"#external-https-server","line":37},{"title":"Multiple servers sharing a single HTTP/S server","target":"#multiple-servers-sharing-a-single-https-server","line":38},{"title":"Client authentication","target":"#client-authentication","line":39},{"title":"Server broadcast","target":"#server-broadcast","line":40},{"title":"Round-trip time","target":"#round-trip-time","line":41},{"title":"Use the Node.js streams API","target":"#use-the-nodejs-streams-api","line":42},{"title":"Other examples","target":"#other-examples","line":43},{"title":"FAQ","target":"#faq","line":44},{"title":"How to get the IP address of the client?","target":"#how-to-get-the-ip-address-of-the-client","line":45},{"title":"How to detect and close broken connections?","target":"#how-to-detect-and-close-broken-connections","line":46},{"title":"How to connect via a proxy?","target":"#how-to-connect-via-a-proxy","line":47},{"title":"Changelog","target":"#changelog","line":48},{"title":"License","target":"#license","line":49},{"title":"`WS_NO_BUFFER_UTIL`","target":"./doc/ws.md#ws_no_buffer_util","line":78},{"title":"`WS_NO_UTF_8_VALIDATE`","target":"./doc/ws.md#ws_no_utf_8_validate","line":95},{"title":"`/doc/ws.md`","target":"./doc/ws.md","line":99},{"title":"MIT","target":"LICENSE","line":537}],"metadata":{"created":"2025-09-01T02:12","updated":"2025-09-01T02:13"},"blocks":{"#---frontmatter---":[1,4],"#ws: a Node.js WebSocket library":[5,553],"#ws: a Node.js WebSocket library#{1}":[7,24],"#ws: a Node.js WebSocket library#Table of Contents":[25,50],"#ws: a Node.js WebSocket library#Table of Contents#{1}":[27,50],"#ws: a Node.js WebSocket library#Protocol support":[51,56],"#ws: a Node.js WebSocket library#Protocol support#{1}":[53,56],"#ws: a Node.js WebSocket library#Installing":[57,96],"#ws: a Node.js WebSocket library#Installing#{1}":[59,62],"#ws: a Node.js WebSocket library#Installing#Opt-in for performance":[63,96],"#ws: a Node.js WebSocket library#Installing#Opt-in for performance#{1}":[65,82],"#ws: a Node.js WebSocket library#Installing#Opt-in for performance#Legacy opt-in for performance":[83,96],"#ws: a Node.js WebSocket library#Installing#Opt-in for performance#Legacy opt-in for performance#{1}":[85,96],"#ws: a Node.js WebSocket library#API docs":[97,101],"#ws: a Node.js WebSocket library#API docs#{1}":[99,101],"#ws: a Node.js WebSocket library#WebSocket compression":[102,163],"#ws: a Node.js WebSocket library#WebSocket compression#{1}":[104,163],"#ws: a Node.js WebSocket library#Usage examples":[164,426],"#ws: a Node.js WebSocket library#Usage examples#Sending and receiving text data":[166,183],"#ws: a Node.js WebSocket library#Usage examples#Sending and receiving text data#{1}":[168,183],"#ws: a Node.js WebSocket library#Usage examples#Sending binary data":[184,203],"#ws: a Node.js WebSocket library#Usage examples#Sending binary data#{1}":[186,203],"#ws: a Node.js WebSocket library#Usage examples#Simple server":[204,221],"#ws: a Node.js WebSocket library#Usage examples#Simple server#{1}":[206,221],"#ws: a Node.js WebSocket library#Usage examples#External HTTP/S server":[222,247],"#ws: a Node.js WebSocket library#Usage examples#External HTTP/S server#{1}":[224,247],"#ws: a Node.js WebSocket library#Usage examples#Multiple servers sharing a single HTTP/S server":[248,288],"#ws: a Node.js WebSocket library#Usage examples#Multiple servers sharing a single HTTP/S server#{1}":[250,288],"#ws: a Node.js WebSocket library#Usage examples#Client authentication":[289,333],"#ws: a Node.js WebSocket library#Usage examples#Client authentication#{1}":[291,333],"#ws: a Node.js WebSocket library#Usage examples#Server broadcast":[334,377],"#ws: a Node.js WebSocket library#Usage examples#Server broadcast#{1}":[336,377],"#ws: a Node.js WebSocket library#Usage examples#Round-trip time":[378,404],"#ws: a Node.js WebSocket library#Usage examples#Round-trip time#{1}":[380,404],"#ws: a Node.js WebSocket library#Usage examples#Use the Node.js streams API":[405,419],"#ws: a Node.js WebSocket library#Usage examples#Use the Node.js streams API#{1}":[407,419],"#ws: a Node.js WebSocket library#Usage examples#Other examples":[420,426],"#ws: a Node.js WebSocket library#Usage examples#Other examples#{1}":[422,426],"#ws: a Node.js WebSocket library#FAQ":[427,530],"#ws: a Node.js WebSocket library#FAQ#How to get the IP address of the client?":[429,455],"#ws: a Node.js WebSocket library#FAQ#How to get the IP address of the client?#{1}":[431,455],"#ws: a Node.js WebSocket library#FAQ#How to detect and close broken connections?":[456,525],"#ws: a Node.js WebSocket library#FAQ#How to detect and close broken connections?#{1}":[458,525],"#ws: a Node.js WebSocket library#FAQ#How to connect via a proxy?":[526,530],"#ws: a Node.js WebSocket library#FAQ#How to connect via a proxy?#{1}":[528,530],"#ws: a Node.js WebSocket library#Changelog":[531,534],"#ws: a Node.js WebSocket library#Changelog#{1}":[533,534],"#ws: a Node.js WebSocket library#License":[535,553],"#ws: a Node.js WebSocket library#License#{1}":[537,553]},"last_import":{"mtime":1756857494428,"size":15918,"at":1756858820460,"hash":"651d857150af24f143e026ce87a5ea30190fb1fa4680494b62e0ed9f14d71438"}},